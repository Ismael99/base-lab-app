import React from 'react'
import { FormWithRender } from '../../../../components/Form/FormWithRender'
import { ExamenRealizadoSchema } from '../../../../schema'
import { setCurrentExamenRealizado } from '../../../../redux/actions/examenesRealizadosActions'
import { useSelector } from 'r'
import { createSelector } from 'selector'

export const ExamenesRealizadosFormWithRender = ({
  examenesRealizados,
  id,
  isInterfaceView,
  redirectToBack,
  ...props
}) => {
  let examenRealizadoCurrent = examenesRealizados?.find((examen_realizado) => {
    return examen_realizado.examen_realizado_id.toString() === id
  })
  const examenTempleteSelector = createSelector(
    state => state.examenes_templete.data?? [],
    data => data.find(examenTemplete=> {
      return examenTemplete.examen_templete_examen === examenRealizadoCurrent.examen_realizado_examen
    })
  )
  const examenTemplete = useSelector(examenTempleteSelector)
  const examenRealizadoCurrent.examen_realizado_resultados = examenRealizadoCurrent.examen_realizado_resultados[0].value !== ''? examenRealizadoCurrent.examen_realizado_resultados : examenTemplete
  console.log({ examenesRealizados })
  return (
    <FormWithRender
      isInterfaceView={isInterfaceView}
      initialValues={examenRealizadoCurrent}
      schema={ExamenRealizadoSchema}
      setCurrent={setCurrentExamenRealizado}
      currentPath="examenes_realizados"
      {...props}
    />
  )
}
